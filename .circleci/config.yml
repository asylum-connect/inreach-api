#Alfredo Moreira
#Put this file in a .circleci/ folder
#This file is to be used to run Github Status Checks
version: 2.1
parameters:
  run_migration:
    default: false
    type: boolean
  run_rollback:
    default: false
    type: boolean
  files:
    default: ""
    type: string
orbs:
  node: circleci/node@3.0.0
  codecov: codecov/codecov@1.1.3
jobs: 
  build:
    docker:
      - image: circleci/node:15.6.0
    working_directory: ~/catalog-api
    steps:
      - checkout
      # Download and cache dependencies
    #   - restore_cache:
    #       keys:
    #       - v1-dependencies-{{ checksum "package.json" }}
    #       # fallback to using the latest cache if no exact match is found
    #       - v1-dependencies-
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Install Packages
          command: yarn install
      - run:
          name: Install Cypress
          command: yarn add cypress
      #save cache for use next tests
      - save_cache:
         paths:
          - node_modules
          - "~/.cache/Cypress"
         key: v1-dependencies-{{ checksum "package.json" }}
      #Recreate .env file from CircleCI Project Env Vars
      - run:
          name: Create .env file
          command: |
           cat \<< EOF > ./.env
           MAILGUN_API_KEY=$MAILGUN_API_KEY
           MAILGUN_DOMAIN=$MAILGUN_DOMAIN
           DB_URI=$DB_URI
           SHEETS_API_KEY=$SHEETS_API_KEY
           EOF

      #Building and Compiling Binary
      - run: 
          name: Compile Binary
          command: yarn build

  unit:
    docker:
      - image: circleci/node:15.6.0
    working_directory: ~/catalog-api
    steps:
      - checkout
      # Download and cache dependencies
    #   - restore_cache:
    #       keys:
    #       - v1-dependencies-{{ checksum "package.json" }}
    #       # fallback to using the latest cache if no exact match is found
    #       - v1-dependencies-
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Install Packages
          command: yarn install
      - run:
          name: Install Cypress
          command: yarn add cypress
      #save cache for use next tests
      - save_cache:
         paths:
          - node_modules
          - "~/.cache/Cypress"
         key: v1-dependencies-{{ checksum "package.json" }}
      #Unit Testing
      - run: 
          name: "Unit Testing"
          command: "yarn pre-unit-test && yarn unit-test" 
      - codecov/upload:
          file: 'jestCoverage/coverage-final.json'
          flags: 'Unit-Tests'
      - store_test_results:
          path: ./jestUnitTest
      - store_artifacts:
          path: ./jestCoverage
          destination: Unit
    
  e2e:
    docker:
      - image: cypress/base:16.5.0
        environment:
          ## this enables colors in the output
          TERM: xterm
    working_directory: ~/catalog-api
    steps:
      - checkout
      # Download and cache dependencies
    #   - restore_cache:
    #       keys:
    #       - v1-dependencies-{{ checksum "package.json" }}
    #       # fallback to using the latest cache if no exact match is found
    #       - v1-dependencies-
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Ignore Engines
          command: yarn config set ignore-engines true
      - run:
          name: Install Packages
          command: yarn install
      - run:
          name: Install NYC
          command: yarn add nyc
      - run:
          name: Install Cypress
          command: yarn add cypress
      #save cache for use next tests
      - save_cache:
         paths:
          - node_modules
          - "~/.cache/Cypress"
         key: v1-dependencies-{{ checksum "package.json" }}
      #Recreate .env file from CircleCI Project Env Vars
      - run:
          name: Create .env file
          command: |
           cat \<< EOF > ./.env
           MAILGUN_API_KEY=$MAILGUN_API_KEY
           MAILGUN_DOMAIN=$MAILGUN_DOMAIN
           DB_URI=$DB_URI
           SHEETS_API_KEY=$SHEETS_API_KEY
           EOF
      #Testing
      - run: 
          name: "Pre E2E Automation"
          command: "yarn pre-e2e-test"
      - run: 
          name: "E2E Automation"
          command: "yarn e2e"
      - run:
          name: "Show Coverage"
          command: "yarn show-coverage"
      - codecov/upload:
          file: 'cypressCoverage/coverage-final.json'
          flags: 'Integration'
      - run:
          name: "Post E2E tasks"
          command: "yarn post-e2e-test"
      - store_artifacts:
          path: "reports/"
          destination: E2E Test Reports
      - store_artifacts:
          path: ./cypressCoverage
          destination: E2E Coverage Reports
  lint:
    docker:
      - image: circleci/node:15.6.0
    working_directory: ~/catalog-api
    steps:
      - checkout
      # Download and cache dependencies
    #   - restore_cache:
    #       keys:
    #       - v1-dependencies-{{ checksum "package.json" }}
    #       # fallback to using the latest cache if no exact match is found
    #       - v1-dependencies-
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Install Packages
          command: yarn install
      #save cache for use next tests
      - save_cache:
         paths:
          - node_modules
          - "~/.cache/Cypress"
         key: v1-dependencies-{{ checksum "package.json" }}
      #Run linting
      - run:
          name: Run linting
          command: "yarn lint"
  
  migration:
    docker:
      - image: circleci/node:15.6.0
    working_directory: ~/catalog-api
    environment:
      FILES: << pipeline.parameters.files>>
    steps:
      - checkout
      #Recreate .env file from CircleCI Project Env Vars
      - run:
          name: Create .env file
          command: |
           cat \<< EOF > ./.env
           DB_URI=$DB_URI_PROD
           EOF
      - run: 
          name: Run migration
          command: |
            for i in ${FILES//,/ }; do
              export MIGRATION_FILE=$i
              yarn run-migration
            done
  
  rollback:
    docker:
      - image: circleci/node:15.6.0
    working_directory: ~/catalog-api
    environment:
      FILES: << pipeline.parameters.files>>
    steps:
      - checkout
      #Recreate .env file from CircleCI Project Env Vars
      - run:
          name: Create .env file
          command: |
           cat \<< EOF > ./.env
           DB_URI=$DB_URI_PROD
           EOF
      - run: 
          name: Run rollback
          command: |
            for i in ${FILES//,/ }; do
              export MIGRATION_FILE=$i
              yarn run-rollback
            done

workflows:
  version: 2
  pull_request:
    jobs:
      - build:
          filters:
            branches:
              ignore: main
      - e2e:
          filters:
            branches:
              ignore: main
      - unit:
          filters:
            branches:
              ignore: main
      - lint:
          filters:
            branches:
              ignore: main
              
  migration:
    when: << pipeline.parameters.run_migration >>
    jobs:
      - hold:
          type: approval
      - migration:
          filters:
            branches:
              only: main
          requires:
            - hold
  
  rollback:
    when: << pipeline.parameters.run_rollback >>
    jobs:
      - hold:
          type: approval
      - rollback:
          filters:
            branches:
              only: main
          requires:
            - hold