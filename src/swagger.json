{
  "openapi": "3.0.0",
  "info": {
    "title": "Catalog API",
    "version": "1",
    "contact": {
      "email": "jamie@inreach.org"
    }
  },
  "servers": [
    {
      "url": "https://inreach-api-staging.herokuapp.com/v1",
      "description": "Powering the Catalog and Control Panel"
    }
  ],
  "paths": {
    "/organizations": {
      "get": {
        "summary": "Get organizations",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Name of the organization to search against",
            "example": "lgbt"
          },
          {
            "in": "query",
            "name": "owner",
            "schema": {
              "type": "string"
            },
            "description": "The email of the organization owner",
            "example": "1"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            },
            "description": "The result page to return. Each page has 20 results",
            "example": "1"
          },
          {
            "in": "query",
            "name": "pending",
            "schema": {
              "type": "string"
            },
            "description": "Filter organizations that are unpublished.",
            "example": "true"
          },
          {
            "in": "query",
            "name": "pendingOwnership",
            "schema": {
              "type": "string"
            },
            "description": "Filter organizations that have pending affiliates.",
            "example": "true"
          },
          {
            "in": "query",
            "name": "properties",
            "schema": {
              "type": "string"
            },
            "description": "Comma delimited, list of property names and values. The value '$existsFalse' checks that the value does not exist",
            "example": "community-asylum-seeker=true,service-county-california-san-francisco=true. NOTE: req-* properties are treated differently and act as OR filters instead of AND"
          },
          {
            "in": "query",
            "name": "serviceArea",
            "schema": {
              "type": "string"
            },
            "description": "Comma delimited, list of service areas to search for",
            "example": "service-county-california-san-francisco,service-state-california,service-national-united-states"
          },
          {
            "in": "query",
            "name": "tagLocale",
            "schema": {
              "type": "string"
            },
            "description": "Required if using tags. The locale to query for tags",
            "example": "united_states"
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            },
            "description": "Required if using tagLocale. Comma delimited, list of tags",
            "example": "Medical,Food"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organizations"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "boolean",
                      "example": true
                    },
                    "organation": {
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/count": {
      "get": {
        "summary": "Get count of the organizations query. Uses the same parameters as GET /organizations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 100
                    },
                    "pages": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        }
      ],
      "get": {
        "summary": "Get an organization",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update fields on an organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an organization",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/services": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        }
      ],
      "get": {
        "summary": "Get an organization's services",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Services"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a service for an organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/services/:serviceId": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        },
        {
          "in": "path",
          "name": "serviceId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the service"
        }
      ],
      "get": {
        "summary": "Get a service",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update fields on a service",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a service",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/comments": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        }
      ],
      "get": {
        "summary": "Get the comments for an organization and it's services",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update the organization's comments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/services/:serviceId/comments": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        },
        {
          "in": "path",
          "name": "serviceId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the service"
        }
      ],
      "get": {
        "summary": "Get the comments for a service",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update the service's comments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/ratings": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        }
      ],
      "get": {
        "summary": "Get the ratings for an organization and it's services",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ratings"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update the organizations's ratings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/services/:serviceId/ratings": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        },
        {
          "in": "path",
          "name": "serviceId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the service"
        }
      ],
      "get": {
        "summary": "Get the ratings for a service",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ratings"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update the service's ratings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/owners": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        }
      ],
      "post": {
        "summary": "Create a new organization owner",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": true
                  },
                  "userId": {
                    "type": "string",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/owners/:userId/approve": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        },
        {
          "in": "path",
          "name": "userId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the user"
        }
      ],
      "get": {
        "summary": "Approve the user as an organzation owner",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/:orgId/owners/:userId": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        },
        {
          "in": "path",
          "name": "userId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the user"
        }
      ],
      "delete": {
        "summary": "Remove the owner from the organization",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/slug/organizations/:orgSlug": {
      "parameters": [
        {
          "in": "path",
          "name": "orgSlug",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Slug of the organization"
        }
      ],
      "get": {
        "summary": "Get an organization by its slug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      }
    },
    "/slug/organizations/:orgSlug/services/:serviceSlug": {
      "parameters": [
        {
          "in": "path",
          "name": "orgSlug",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Slug of the organization"
        },
        {
          "in": "path",
          "name": "serviceSlug",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Slug of the service"
        }
      ],
      "get": {
        "summary": "Get a service by its and its org's slug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Create a token for the user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": true
                  },
                  "password": {
                    "type": "string",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/check": {
      "post": {
        "summary": "Check the user's token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "summary": "Get all reviews of the system",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string",
              "example": 1
            },
            "description": "The result page to return. Each page has 20 results"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reviews"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a review of the system",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/suggestions": {
      "parameters": [
        {
          "in": "path",
          "name": "orgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the organization"
        }
      ],
      "get": {
        "summary": "Get all of the suggestions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new suggestion",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "example": "name"
                  },
                  "value": {
                    "type": "string",
                    "example": "name"
                  },
                  "userId": {
                    "type": "string",
                    "example": "name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/suggestions/:suggestionId": {
      "parameters": [
        {
          "in": "path",
          "name": "suggestionId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the suggestion"
        }
      ],
      "delete": {
        "summary": "Delete a suggestion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get users",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "adminDataManager",
              "example": true
            },
            "description": "Filter by user type. Valid values are \"adminDataManager\", \"dataManager\", \"lawyer\", \"provider\", \"seeker\""
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string",
              "example": 1
            },
            "description": "The result page to return. Each page has 20 results"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/count": {
      "get": {
        "summary": "Get count of the users query. Uses the same parameters as GET /users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 100
                    },
                    "pages": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/:userId": {
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the user"
        }
      ],
      "get": {
        "summary": "Get a user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update fields on a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/:userId/password": {
      "patch": {
        "summary": "Update the user's password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/:userId/lists": {
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the user"
        }
      ],
      "post": {
        "summary": "Create a list for the user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/:userId/lists/:listId/items": {
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the user"
        },
        {
          "in": "path",
          "name": "listId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the list"
        }
      ],
      "post": {
        "summary": "Add an item to the user's list",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "itemId": {
                    "type": "string",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/:userId/lists/:listId/items/:itemId": {
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the user"
        },
        {
          "in": "path",
          "name": "listId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the list"
        },
        {
          "in": "path",
          "name": "itemId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "ID of the item"
        }
      ],
      "delete": {
        "summary": "Remove an item from the user's list",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Comment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "Comments": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "Organizations": {
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            }
          }
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "alert_message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "adminEmails": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "name": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "properties": {
            "type": "object"
          },
          "schedules": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          },
          "slug": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "verified_at": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        }
      },
      "Services": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "access_instructions": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "description": {
            "type": "string"
          },
          "email_id": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "location_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "type": "object"
          },
          "phone_id": {
            "type": "string"
          },
          "properties": {
            "type": "object"
          },
          "schedule_id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "tags": {
            "type": "object",
            "properties": {
              "canada": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "mexico": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "united_states": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Ratings": {
        "type": "object",
        "properties": {
          "average_rating": {
            "type": "string"
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rating"
            }
          }
        }
      },
      "Rating": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "rating": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "Reviews": {
        "type": "object",
        "properties": {
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Review"
            }
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "hasAccount": {
            "type": "boolean"
          },
          "hasLeftFeedbackBefore": {
            "type": "boolean"
          },
          "negativeReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rating": {
            "type": "number"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "catalogType": {
            "type": "string"
          },
          "isProfessional": {
            "type": "boolean"
          },
          "isDataManager": {
            "type": "boolean"
          },
          "isAdminDataManager": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}
